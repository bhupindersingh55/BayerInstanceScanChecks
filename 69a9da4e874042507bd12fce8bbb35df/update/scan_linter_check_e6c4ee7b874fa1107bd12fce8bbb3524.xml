<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_linter_check">
    <scan_linter_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <attributes/>
        <category>manageability</category>
        <description>Utilizing the RESTMessageV2 API in scripting enables the transmission of outbound REST messages. Nevertheless, employing the empty constructor of the class circumvents the requirement of registering a Rest message record in ServiceNow, thus posing difficulties in tracking the outgoing integrations with third-party applications. This impacts the overall manageability, operations, and reporting of systems that ServiceNow interacts with.</description>
        <documentation_url>https://developer.servicenow.com/dev.do#!/reference/api/tokyo/server/sn_ws-namespace/c_RESTMessageV2API#r_RMV2-RESTMessageV2_S_S?navFilter=rest</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>Avoid instantiated object of RESTMessageV2()</name>
        <priority>2</priority>
        <resolution_details>To avoid using declarations like the one listed below:&#13;
**********************************************************&#13;
var sm = new sn_ws.RESTMessageV2();&#13;
**********************************************************&#13;
&#13;
Follow the recommended approach:&#13;
&#13;
A:  REST Message&#13;
&#13;
1.  Create a Rest Message record in ServiceNow.&#13;
2.  Check this link &lt;&lt; https://docs.servicenow.com/bundle/tokyo-api-reference/page/integrate/outbound-rest/task/t_ConfiguringARESTMessage.html &gt;&gt;  .&#13;
3.  Set endpint and authentication.&#13;
4.  Define the HTTP Rest Message methods &lt;&lt; https://docs.servicenow.com/bundle/tokyo-api-reference/page/integrate/outbound-rest/task/t_DefineAnHTTPMethod.html &gt;&gt; .&#13;
5.  Test the REST Message with suitable data.&#13;
&#13;
B: Instantiate a RESTMessageV2 object using the information from the REST message record:&#13;
&#13;
1. Use the method RESTMessageV2(String name, String methodName) where name is the message record name and methodName is the HTTP method.&#13;
2.  Example:  &#13;
**********************************************************&#13;
var sm = new sn_ws.RESTMessageV2("REST_message_record","get");&#13;
**********************************************************&#13;
&#13;
Follow these steps to ensure the correct usage of methods and objects.</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function(engine) {

    engine.rootNode.visit(function(node) {
        if (node.getNameIdentifier() && node.getTypeName() === 'NAME' && (node.getNameIdentifier() === 'RESTMessageV2')) {
            var numChildren = 0;
            node.getParent().getParent().visit(function(childnode) {
                if (childnode.getTypeName() === "STRING") {
                    numChildren++;
                }
            });
			
            if (numChildren == 0)
                engine.finding.incrementWithNode(node);
        }
    });

})(engine);]]></script>
        <short_description> Avoid creating empty RESTMessageV2 objects</short_description>
        <sys_class_name>scan_linter_check</sys_class_name>
        <sys_created_by>EGMCF</sys_created_by>
        <sys_created_on>2023-06-02 18:57:32</sys_created_on>
        <sys_id>e6c4ee7b874fa1107bd12fce8bbb3524</sys_id>
        <sys_mod_count>24</sys_mod_count>
        <sys_name>Avoid instantiated object of RESTMessageV2()</sys_name>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</sys_scope>
        <sys_update_name>scan_linter_check_e6c4ee7b874fa1107bd12fce8bbb3524</sys_update_name>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:51:36</sys_updated_on>
    </scan_linter_check>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</claim_owner_scope>
        <claim_timestamp>18d614a9bee0000001</claim_timestamp>
        <metadata_update_name>scan_linter_check_e6c4ee7b874fa1107bd12fce8bbb3524</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>BayerInstanceScanChecks</previous_claim_name>
        <previous_claim_scope>69a9da4e874042507bd12fce8bbb35df</previous_claim_scope>
        <sys_created_by>EGMCF</sys_created_by>
        <sys_created_on>2024-01-31 20:51:36</sys_created_on>
        <sys_id>d7ba1202878042507bd12fce8bbb3516</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:51:36</sys_updated_on>
    </sys_claim>
</record_update>
