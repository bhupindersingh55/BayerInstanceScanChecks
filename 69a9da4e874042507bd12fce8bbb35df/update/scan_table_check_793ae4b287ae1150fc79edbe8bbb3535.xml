<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_table_check">
    <scan_table_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <advanced>true</advanced>
        <attributes/>
        <category>upgradability</category>
        <conditions table="sys_script">scriptLIKE^^NQ^EQ<item endquery="false" field="script" goto="false" newquery="false" operator="LIKE" or="false" value="^^NQ"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </conditions>
        <description>When using the operator ^NQ in an encoded query within a business rule, the results appear in the list view, but the reference links are not correct.
A filter on a business rule that has a query with the operator ^NQ (second level condition) is applied only on the first part of the query. Although the business rule works correctly in the list, if a filter like Active=true is added, the filter is applied only on the first part of the query (before the ^NQ).</description>
        <documentation_url>https://support.servicenow.com/kb?id=kb_article_view&amp;sysparm_article=KB0564887</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>Detect any ^NQ in business rules</name>
        <priority>3</priority>
        <resolution_details>This is expected behavior. The NQ (top level OR) operator will 'OR' all previous query terms with following query terms. When there are no previous query terms, it is equivalent to regular 'OR'. Adjust the business Rule to not use the NQ Operator or disable the Business rule. Check documentation for more information.</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function(finding, current) {

    var instanceTroubleshooterUtil = new sn_troubleshooter.InstanceTroubleshooterUtil();
    if (instanceTroubleshooterUtil.isCustomerRecord(current.getTableName(), current.sys_id)) {
        finding.setCurrentSource(current);
        finding.increment();
    }

})(finding, current);]]></script>
        <short_description>Using operator (^NQ) in encoded queries causes incorrect reference links</short_description>
        <sys_class_name>scan_table_check</sys_class_name>
        <sys_created_by>GIYYH</sys_created_by>
        <sys_created_on>2022-10-18 14:38:56</sys_created_on>
        <sys_id>793ae4b287ae1150fc79edbe8bbb3535</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Detect any ^NQ in business rules</sys_name>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</sys_scope>
        <sys_update_name>scan_table_check_793ae4b287ae1150fc79edbe8bbb3535</sys_update_name>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:50:30</sys_updated_on>
        <table>sys_script</table>
        <use_manifest>false</use_manifest>
    </scan_table_check>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</claim_owner_scope>
        <claim_timestamp>18d61499cb20000001</claim_timestamp>
        <metadata_update_name>scan_table_check_793ae4b287ae1150fc79edbe8bbb3535</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>BayerInstanceScanChecks</previous_claim_name>
        <previous_claim_scope>69a9da4e874042507bd12fce8bbb35df</previous_claim_scope>
        <sys_created_by>EGMCF</sys_created_by>
        <sys_created_on>2024-01-31 20:50:30</sys_created_on>
        <sys_id>277a16ce874042507bd12fce8bbb3527</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:50:30</sys_updated_on>
    </sys_claim>
</record_update>
