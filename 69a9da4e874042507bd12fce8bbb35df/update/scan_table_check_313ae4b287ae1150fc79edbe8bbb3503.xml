<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_table_check">
    <scan_table_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <advanced>false</advanced>
        <attributes/>
        <category>manageability</category>
        <conditions table="sys_script">active=true^when=before^scriptLIKEinsert()^EQ<item endquery="false" field="active" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item display_value="before" endquery="false" field="when" goto="false" newquery="false" operator="=" or="false" value="before"/>
            <item endquery="false" field="script" goto="false" newquery="false" operator="LIKE" or="false" value="insert()"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </conditions>
        <description>Before business rules execute before the data on current record is saved to database. In case, the before business rule fails or aborts its operation, then any insert operations within the business rule becomes invalid but it cannot be reverted back as the operation would have already been completed. In order to avoid such issues, before business rules should not include insert operations.</description>
        <documentation_url>https://support.servicenow.com/kb?id=kb_article_view&amp;sysparm_article=KB0722983</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>Before Business rules should not insert() records in any table</name>
        <priority>3</priority>
        <resolution_details>Move the insert operation from before business rule to  an after business rule so it executes only after the current record is saved to the database.</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {

    // Add your code here

})(engine);]]></script>
        <short_description>Before Business rules should not insert records in any table</short_description>
        <sys_class_name>scan_table_check</sys_class_name>
        <sys_created_by>GIYYH</sys_created_by>
        <sys_created_on>2022-10-18 14:38:55</sys_created_on>
        <sys_id>313ae4b287ae1150fc79edbe8bbb3503</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>Before Business rules should not insert() records in any table</sys_name>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</sys_scope>
        <sys_update_name>scan_table_check_313ae4b287ae1150fc79edbe8bbb3503</sys_update_name>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:50:30</sys_updated_on>
        <table>sys_script</table>
        <use_manifest>false</use_manifest>
    </scan_table_check>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</claim_owner_scope>
        <claim_timestamp>18d61499a0d0000001</claim_timestamp>
        <metadata_update_name>scan_table_check_313ae4b287ae1150fc79edbe8bbb3503</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>BayerInstanceScanChecks</previous_claim_name>
        <previous_claim_scope>69a9da4e874042507bd12fce8bbb35df</previous_claim_scope>
        <sys_created_by>EGMCF</sys_created_by>
        <sys_created_on>2024-01-31 20:50:30</sys_created_on>
        <sys_id>5f7ad2ce874042507bd12fce8bbb35f9</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:50:30</sys_updated_on>
    </sys_claim>
</record_update>
