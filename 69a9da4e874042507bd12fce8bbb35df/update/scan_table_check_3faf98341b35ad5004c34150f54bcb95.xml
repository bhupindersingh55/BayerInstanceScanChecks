<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_table_check">
    <scan_table_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <advanced>false</advanced>
        <attributes/>
        <category>performance</category>
        <conditions table="sysauto_script">active=true^scriptLIKERestMessage^scriptLIKEGlideImportSetRun^ORscriptLIKEGlideImportSetTransformer^EQ<item endquery="false" field="active" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item endquery="false" field="script" goto="false" newquery="false" operator="LIKE" or="false" value="RestMessage"/>
            <item endquery="false" field="script" goto="false" newquery="false" operator="LIKE" or="false" value="GlideImportSetRun"/>
            <item endquery="false" field="script" goto="false" newquery="false" operator="LIKE" or="true" value="GlideImportSetTransformer"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </conditions>
        <description>A scheduled script that executes REST API calls to pull data from external system into ServiceNow platform may cause performance issue by blocking the worker thread until the entire Transform/Load process is completed. This impacts even more when pulling large chunk of data with complex transformation process.</description>
        <documentation_url>https://docs.servicenow.com/bundle/utah-integrate-applications/page/administer/import-sets/reference/custom-type-data-source.html</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>Avoid REST call in scheduled script</name>
        <priority>1</priority>
        <resolution_details>Create a "Custom (Load by Script) type data source" as listed here &lt;&lt;  https://docs.servicenow.com/bundle/utah-integrate-applications/page/administer/import-sets/task/create-custom-type-data-source.html &gt;&gt;.  Add REST/SOAP script calling in "Data Loader" field and eventually map the result objects into the import set table.&#13;
&#13;
Test the Data Source and later add the Transform Maps as required. Once Load/Transform process is validated, then "Scheduled Data Import" could be utilized if the process to be repeated periodically.</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {

    // Add your code here

})(engine);]]></script>
        <short_description>Avoid REST call in scheduled script that loads and transforms data</short_description>
        <sys_class_name>scan_table_check</sys_class_name>
        <sys_created_by>EGMCF</sys_created_by>
        <sys_created_on>2023-03-22 22:11:34</sys_created_on>
        <sys_id>3faf98341b35ad5004c34150f54bcb95</sys_id>
        <sys_mod_count>4</sys_mod_count>
        <sys_name>Avoid REST call in scheduled script</sys_name>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</sys_scope>
        <sys_update_name>scan_table_check_3faf98341b35ad5004c34150f54bcb95</sys_update_name>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:50:27</sys_updated_on>
        <table>sysauto_script</table>
        <use_manifest>false</use_manifest>
    </scan_table_check>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</claim_owner_scope>
        <claim_timestamp>18d61498ff90000001</claim_timestamp>
        <metadata_update_name>scan_table_check_3faf98341b35ad5004c34150f54bcb95</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>BayerInstanceScanChecks</previous_claim_name>
        <previous_claim_scope>69a9da4e874042507bd12fce8bbb35df</previous_claim_scope>
        <sys_created_by>EGMCF</sys_created_by>
        <sys_created_on>2024-01-31 20:50:27</sys_created_on>
        <sys_id>667ad2ce874042507bd12fce8bbb354e</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:50:27</sys_updated_on>
    </sys_claim>
</record_update>
