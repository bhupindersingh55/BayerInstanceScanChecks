<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_linter_check">
    <scan_linter_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <attributes/>
        <category>performance</category>
        <description>The g_form.getReference() method requests the whole Record (that's right, the whole record, one big Object with all fields values) to the server. It may cause slowness to your Client Side action.</description>
        <documentation_url>https://docs.servicenow.com/en-US/bundle/sandiego-application-development/page/script/ajax/topic/p_AJAX.html</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>Avoid g_form.getReference() in client scripts</name>
        <priority>2</priority>
        <resolution_details>The g_form.getReference() method requests the whole Record ( one big Object with all fields values) to the server. It may cause slowness to your Client Side action.

Best way to call from Server data is using GlideAjax API. Sometimes calling API REST can be a good way to acomplish this task as well.</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function(engine) {

    engine.rootNode.visit(function(node) {
        if (node.getNameIdentifier() &&
            node.getTypeName() === 'NAME' &&
            node.getParent().getTypeName() === 'GETPROP' &&
            node.getParent().getParent().getTypeName() === 'CALL' &&
            (node.getNameIdentifier() === 'getReference')) {
            node.getParent().visit(function(childnode) {
                if (childnode.getNameIdentifier() &&
                    childnode.getTypeName() === 'NAME' &&
                    childnode.getNameIdentifier() === 'g_form') {
                    engine.finding.incrementWithNode(node);
                }
            });
        }
    });

})(engine);]]></script>
        <short_description>Avoid g_form.getReference() in client scripts</short_description>
        <sys_class_name>scan_linter_check</sys_class_name>
        <sys_created_by>GIYYH</sys_created_by>
        <sys_created_on>2022-10-18 14:38:54</sys_created_on>
        <sys_id>ad3aa4b287ae1150fc79edbe8bbb35bd</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Avoid g_form.getReference() in client scripts</sys_name>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</sys_scope>
        <sys_update_name>scan_linter_check_ad3aa4b287ae1150fc79edbe8bbb35bd</sys_update_name>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:50:24</sys_updated_on>
    </scan_linter_check>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</claim_owner_scope>
        <claim_timestamp>18d6149835e0000001</claim_timestamp>
        <metadata_update_name>scan_linter_check_ad3aa4b287ae1150fc79edbe8bbb35bd</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>BayerInstanceScanChecks</previous_claim_name>
        <previous_claim_scope>69a9da4e874042507bd12fce8bbb35df</previous_claim_scope>
        <sys_created_by>EGMCF</sys_created_by>
        <sys_created_on>2024-01-31 20:50:24</sys_created_on>
        <sys_id>7d7a92ce874042507bd12fce8bbb3576</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:50:24</sys_updated_on>
    </sys_claim>
</record_update>
