<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_table_check">
    <scan_table_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <advanced>false</advanced>
        <attributes/>
        <category>performance</category>
        <conditions table="sys_script_include">scriptLIKEgetRowCount^EQ<item endquery="false" field="script" goto="false" newquery="false" operator="LIKE" or="false" value="getRowCount"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </conditions>
        <description>ACLs using GlideRecord's getRowCount property may cause performance issues when working on tables with a high record count.</description>
        <documentation_url>https://developer.servicenow.com/dev.do#!/reference/api/quebec/server_legacy/c_GlideAggregateAPI?navFilter=GlideAggregate</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>ACLs using getRowCount may cause performance issues</name>
        <priority>2</priority>
        <resolution_details>Instead of GlideRecord API,  use GlideAggregate to improve performance. Refer the following document on how to COUNT the records using GlideAggregate&#13;
--------------------------------------------------------------------------------&#13;
| Sample script to count number of records in incident table. | &#13;
--------------------------------------------------------------------------------&#13;
var aggIncident = new GlideAggregate('incident');&#13;
var incidentCount ;&#13;
aggIncident.addAggregate('COUNT');&#13;
aggIncident.query();&#13;
while(aggIncident.next()){&#13;
           incidentCount = aggIncident.getAggregate('COUNT')&#13;
}&#13;
gs.print(incidentCount)</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {

    // Add your code here

})(engine);]]></script>
        <short_description>ACLs using getRowCount may cause performance issues</short_description>
        <sys_class_name>scan_table_check</sys_class_name>
        <sys_created_by>EGMCF</sys_created_by>
        <sys_created_on>2023-03-07 18:55:59</sys_created_on>
        <sys_id>4353a67387152d107bd12fce8bbb352a</sys_id>
        <sys_mod_count>3</sys_mod_count>
        <sys_name>ACLs using getRowCount may cause performance issues</sys_name>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</sys_scope>
        <sys_update_name>scan_table_check_4353a67387152d107bd12fce8bbb352a</sys_update_name>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:50:31</sys_updated_on>
        <table>sys_script_include</table>
        <use_manifest>false</use_manifest>
    </scan_table_check>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</claim_owner_scope>
        <claim_timestamp>18d61499fd30000001</claim_timestamp>
        <metadata_update_name>scan_table_check_4353a67387152d107bd12fce8bbb352a</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>BayerInstanceScanChecks</previous_claim_name>
        <previous_claim_scope>69a9da4e874042507bd12fce8bbb35df</previous_claim_scope>
        <sys_created_by>EGMCF</sys_created_by>
        <sys_created_on>2024-01-31 20:50:31</sys_created_on>
        <sys_id>237a16ce874042507bd12fce8bbb3554</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:50:31</sys_updated_on>
    </sys_claim>
</record_update>
