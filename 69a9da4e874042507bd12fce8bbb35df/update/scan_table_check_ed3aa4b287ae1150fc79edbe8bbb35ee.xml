<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_table_check">
    <scan_table_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <advanced>false</advanced>
        <attributes/>
        <category>manageability</category>
        <conditions table="sys_update_xml">application.scopeNSAMEASupdate_set.application.scope^EQ<item endquery="false" field="application.scope" goto="false" newquery="false" operator="NSAMEAS" or="false" value="update_set.application.scope"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </conditions>
        <description>The scope of all the updates in the update set has to match the scope of the update set itself. That is all the customer updates have to be in the same scope as the scope of the update set. If this is not the case, upon previewing the retrieved update set on another instance, you will be presented with errors and won't be able to commit the update set.</description>
        <documentation_url>https://support.servicenow.com/kb?id=kb_article_view&amp;sysparm_article=KB0743551</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>Update Scope Id is different than Update Set Scope Id</name>
        <priority>2</priority>
        <resolution_details>You may want to remove the customer update entries. Another option might be to manually move the customer update to a retrieved update set that is in the same scope. After that, if you preview the update set the preview problem will no longer persist.</resolution_details>
        <run_condition>gs.getProperty('sn_appclient.instance_type') != 'production'</run_condition>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function (engine) {

    // Add your code here

})(engine);]]></script>
        <short_description>Update Scope Id is different than Update Set Scope Id</short_description>
        <sys_class_name>scan_table_check</sys_class_name>
        <sys_created_by>GIYYH</sys_created_by>
        <sys_created_on>2022-10-18 14:38:55</sys_created_on>
        <sys_id>ed3aa4b287ae1150fc79edbe8bbb35ee</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>Update Scope Id is different than Update Set Scope Id</sys_name>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</sys_scope>
        <sys_update_name>scan_table_check_ed3aa4b287ae1150fc79edbe8bbb35ee</sys_update_name>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:50:33</sys_updated_on>
        <table>sys_update_xml</table>
        <use_manifest>false</use_manifest>
    </scan_table_check>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</claim_owner_scope>
        <claim_timestamp>18d6149a7850000001</claim_timestamp>
        <metadata_update_name>scan_table_check_ed3aa4b287ae1150fc79edbe8bbb35ee</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>BayerInstanceScanChecks</previous_claim_name>
        <previous_claim_scope>69a9da4e874042507bd12fce8bbb35df</previous_claim_scope>
        <sys_created_by>EGMCF</sys_created_by>
        <sys_created_on>2024-01-31 20:50:33</sys_created_on>
        <sys_id>448a16ce874042507bd12fce8bbb35c1</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:50:33</sys_updated_on>
    </sys_claim>
</record_update>
