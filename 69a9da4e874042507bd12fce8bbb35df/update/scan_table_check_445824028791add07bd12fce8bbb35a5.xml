<?xml version="1.0" encoding="UTF-8"?><record_update table="scan_table_check">
    <scan_table_check action="INSERT_OR_UPDATE">
        <active>true</active>
        <advanced>true</advanced>
        <attributes/>
        <category>performance</category>
        <conditions table="sys_ui_list">nameNOT LIKEimport^EQ<item endquery="false" field="name" goto="false" newquery="false" operator="NOT LIKE" or="false" value="import"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </conditions>
        <description>The content of journal fields (e.g. "work notes" or "comments") are actually stored in a child table. When a journal field is displayed on a list it requires one extra query per row. With 50-100 rows per page this can result in diminished performance during list rendering.</description>
        <documentation_url>https://docs.servicenow.com/bundle/sandiego-platform-administration/page/administer/list-administration/task/t_ConfigureTheListLayout.html</documentation_url>
        <finding_type>scan_finding</finding_type>
        <name>Avoid adding Journal fields to Lists </name>
        <priority>3</priority>
        <resolution_details>Reset the list layout and remove any journal fields from the default list view.</resolution_details>
        <run_condition/>
        <score_max>100</score_max>
        <score_min>0</score_min>
        <score_scale>1</score_scale>
        <script><![CDATA[(function(engine) {

    // Declare variables
    var tableID = engine.current.getValue("sys_id");
    var tableName = engine.current.getValue("name");

    // Count number of fields in the list view
    var listElements = new GlideRecord('sys_ui_list_element');
    listElements.addQuery('list_id', tableID);
    listElements.query();
    while (listElements.next()) {
        getElement(tableName, listElements.getValue('element'));
    }

    function getElement(endTable, elementValue) {
        var sysDictionary = new GlideRecord('sys_dictionary');
        sysDictionary.addQuery('name', endTable);
        sysDictionary.addQuery('element', elementValue);
        sysDictionary.query();
        if (sysDictionary.next()) {
            if (sysDictionary.internal_type.name == 'journal_input')
                engine.finding.increment();
        } else {
            var parentTable = new GlideRecord('sys_db_object');
            parentTable.addQuery('name', endTable);
            parentTable.addNotNullQuery('super_class');
            parentTable.query();
            if (parentTable.next()) {
                getElement(parentTable.super_class.name + '', elementValue);
            }
        }
    }

})(engine);]]></script>
        <short_description>Avoid adding Journal fields to Lists </short_description>
        <sys_class_name>scan_table_check</sys_class_name>
        <sys_created_by>EGMCF</sys_created_by>
        <sys_created_on>2023-03-01 23:28:40</sys_created_on>
        <sys_id>445824028791add07bd12fce8bbb35a5</sys_id>
        <sys_mod_count>33</sys_mod_count>
        <sys_name>Avoid adding Journal fields to Lists </sys_name>
        <sys_package display_value="Global" source="global">global</sys_package>
        <sys_policy/>
        <sys_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</sys_scope>
        <sys_update_name>scan_table_check_445824028791add07bd12fce8bbb35a5</sys_update_name>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:50:43</sys_updated_on>
        <table>sys_ui_list</table>
        <use_manifest>false</use_manifest>
    </scan_table_check>
    <sys_claim action="INSERT_OR_UPDATE">
        <claim_owner_scope display_value="BayerInstanceScanChecks">69a9da4e874042507bd12fce8bbb35df</claim_owner_scope>
        <claim_timestamp>18d6149d0770000001</claim_timestamp>
        <metadata_update_name>scan_table_check_445824028791add07bd12fce8bbb35a5</metadata_update_name>
        <previous_claim_app_version>1.0.0</previous_claim_app_version>
        <previous_claim_name>BayerInstanceScanChecks</previous_claim_name>
        <previous_claim_scope>69a9da4e874042507bd12fce8bbb35df</previous_claim_scope>
        <sys_created_by>EGMCF</sys_created_by>
        <sys_created_on>2024-01-31 20:50:43</sys_created_on>
        <sys_id>b28a1ace874042507bd12fce8bbb3526</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_updated_by>EGMCF</sys_updated_by>
        <sys_updated_on>2024-01-31 20:50:43</sys_updated_on>
    </sys_claim>
</record_update>
